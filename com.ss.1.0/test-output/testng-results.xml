<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="1" passed="0" failed="0" skipped="1">
  <reporter-output>
    <line>
      <![CDATA[Browser window is maximized successfully]]>
    </line>
  </reporter-output>
  <suite started-at="2023-11-23T10:47:23 IST" name="Default suite" finished-at="2023-11-23T10:47:29 IST" duration-ms="5935">
    <groups>
    </groups>
    <test started-at="2023-11-23T10:47:23 IST" name="Default test" finished-at="2023-11-23T10:47:29 IST" duration-ms="5935">
      <class name="register.SS_RG_001">
        <test-method is-config="true" signature="beforeSuit()[pri:0, instance:register.SS_RG_001@485966cc]" started-at="2023-11-23T10:47:23 IST" name="beforeSuit" finished-at="2023-11-23T10:47:23 IST" duration-ms="453" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuit -->
        <test-method is-config="true" signature="browserSetup()[pri:0, instance:register.SS_RG_001@485966cc]" started-at="2023-11-23T10:47:23 IST" name="browserSetup" finished-at="2023-11-23T10:47:28 IST" duration-ms="4465" status="PASS">
          <reporter-output>
            <line>
              <![CDATA[Browser window is maximized successfully]]>
            </line>
          </reporter-output>
        </test-method> <!-- browserSetup -->
        <test-method signature="shopper_Register(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)[pri:0, instance:register.SS_RG_001@485966cc]" started-at="2023-11-23T10:47:29 IST" name="shopper_Register" data-provider="shop_register" finished-at="2023-11-23T10:47:29 IST" duration-ms="0" status="SKIP">
          <exception class="java.lang.RuntimeException">
            <message>
              <![CDATA[java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.RuntimeException: java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:50)
at org.testng.internal.MethodInvocationHelper.invokeDataProvider(MethodInvocationHelper.java:146)
at org.testng.internal.Parameters.handleParameters(Parameters.java:798)
at org.testng.internal.Parameters.handleParameters(Parameters.java:740)
at org.testng.internal.ParameterHandler.handleParameters(ParameterHandler.java:59)
at org.testng.internal.ParameterHandler.createParameters(ParameterHandler.java:38)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:791)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: java.lang.IllegalStateException: Cannot get a STRING value from a NUMERIC cell
at org.apache.poi.xssf.usermodel.XSSFCell.typeMismatch(XSSFCell.java:1035)
at org.apache.poi.xssf.usermodel.XSSFCell.getRichStringCellValue(XSSFCell.java:390)
at org.apache.poi.xssf.usermodel.XSSFCell.getStringCellValue(XSSFCell.java:342)
at generic.ReadExcel.getMultipleData(ReadExcel.java:50)
at register.SS_RG_001.shop_register_data(SS_RG_001.java:35)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:77)
at org.testng.internal.MethodInvocationHelper.invokeMethodNoCheckedException(MethodInvocationHelper.java:46)
... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.RuntimeException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- shopper_Register -->
        <test-method is-config="true" signature="CloseApp()[pri:0, instance:register.SS_RG_001@485966cc]" started-at="2023-11-23T10:47:29 IST" name="CloseApp" finished-at="2023-11-23T10:47:29 IST" duration-ms="309" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CloseApp -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:register.SS_RG_001@485966cc]" started-at="2023-11-23T10:47:29 IST" name="afterSuite" finished-at="2023-11-23T10:47:29 IST" duration-ms="376" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- register.SS_RG_001 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
